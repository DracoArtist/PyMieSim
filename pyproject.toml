[build-system]
requires = ["scikit-build-core", "pybind11"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
cmake.verbose = false
editable.verbose = false
logging.level = "INFO"
wheel.exclude = ["PyMieSim/cpp"]
install.strip = false
sdist.include = ["PyMieSim/binary/*"]
sdist.exclude = [
    "tests",
    "docs",
    ".git*",
    "developments",
]

[project]
name = "PyMieSim"
version = "1.12.3"
description = "A package for light scattering computation."
license = {file = "LICENSE"}
documentation = 'https://pymiesim.readthedocs.io/'
platforms = ['unix', 'linux', 'osx']
readme = "README.rst"
url = 'https://github.com/MartinPdeS/PyMieSim'
requires-python = ">=3.10"
authors = [{ name="Martin Poinsinet de Sivry-Houle", email="martin.poinsinet.de.sivry@gmail.com"}]
classifiers = [
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: Implementation :: CPython',
    'Development Status :: 3 - Alpha',
    'Topic :: Scientific/Engineering :: Physics',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Science/Research',
]
keywords = [
    "mie",
    "scattering",
    "backscatter",
    "sphere",
    "cylinder",
    "nanoparticle",
    "phase function",
    "efficiency",
    "rayleigh",
    "backscattering"
]
dependencies = [
    "numpy>=1.26.0",
    "pydantic==2.6.3",
    "scipy==1.11.3",
    "DataVisual==1.4.1",
    "PyOptik>=0.7.10",
    "tabulate==0.9.0",
]

[project.optional-dependencies]
testing = [
    "pymiescatt",
    "pytest>=0.6",
    "pytest-cov>=2.0",
    "pytest-json-report==1.5.0",
    "mypy>=0.910",
    "flake8>=3.9",
    "tox>=3.24",
    "coverage==6.5.0"
]

documentation = [
    "pymiescatt",
    "numpydoc==1.6.0",
    "sphinx>=5.1.1",
    "sphinx-gallery==0.15.0",
    "sphinx-rtd-theme==2.0.0",
    "pydata-sphinx-theme==0.14.1",
]

[tool.pytest.ini_options]
minversion = "6.0"
xfail_strict = true
log_cli_level = "INFO"
addopts = [
    "--import-mode=importlib",
    '-v',
    '-rA',
    '-rw'
]

testpaths = [
    "tests/detectors",
    "tests/scatterers",
    "tests/experiments",
    "tests/validation",
    "tests/extra"
]

[tool.cibuildwheel]
build-frontend = "pip"
build-verbosity = 0
before-test = ""
test-command = "python -m pytest -rA {project}/tests --ignore={project}/tests/gui"
test-extras = ["testing"]

[tool.cibuildwheel.linux]
archs = ["x86_64"]
build = ["cp310-manylinux*", "cp311-manylinux*", "cp312-manylinux*"]
manylinux-x86_64-image = "manylinux2014"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
# environment = {MACOSX_DEPLOYMENT_TARGET = "10.15"}
archs = ["arm64", "universal2"]
build = ["cp310-*", "cp311-*", "cp312-*"]
repair-wheel-command = "delocate-wheel -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
build = ["cp310-*", "cp311-*", "cp312-*"]
